@model List<PruebaCrudMVC.Models.TableViewModels.CancionesTableViewModel>
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_LayoutLogin.cshtml";
}

<h2>Favoritos</h2>
@*<div class="row">
        <div class="col-md-12">
            <input type="button" class="btn btn-primary" onclick="document.location.href='@Url.Content("~/Clientes/Add")'" value="Nuevo" />
        </div>
    </div>*@
<br>
<br>
<div class="row mb-3">
    <div class="col-md-6">
        <input type="text" id="buscar" class="form-control" placeholder="Buscar por canción o artista..." />
    </div>
    <div class="col-md-6 text-end">
        @Html.DropDownList("generoFiltro", (SelectList)ViewBag.Generos, "Todos", new { @class = "form-select w-auto d-inline-block", id = "generoFiltro" })
    </div>
</div>
<br>
<br>
<div class="row">
    <div class="col-md-12">
        <table id="tablaCanciones" class="table-bordered">
            <thead>
                <tr>
                    <th style="display:none;"></th> <!-- para el ID oculto -->
                    <th class="col-md-3">Cancion</th>
                    <th class="col-md-2">Artista</th>
                    <th class="col-md-2">Genero</th>
                    <th class="col-md-1">Favorito</th>
                    <th class="col-md-3">Calificacion</th>
                    <th class="col-md-2">Promedio</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var elemento in Model)
                {
                    <tr>
                        <td style="display:none;">
                            <input type="hidden" class="id" value="@elemento.ID" />
                        </td>
                        <td>@elemento.Nombre</td>
                        <td>@elemento.Artista</td>
                        <td>@elemento.Genero</td>
                        <td>
                            <input onclick="jsDelete(@elemento.ID);" type="button" value="Favorito" class="btn btn-primary" />
                        </td>
                        <td>
                            <div style="display: flex; flex-direction: column;">
                                <select class="form-select calificacion" data-id="@elemento.ID">
                                    @for (int i = 0; i <= 5; i++)
                                    {
                                        <option value="@i" @(elemento.CalificaionUsuario == i ? "selected" : "")>
                                            @(new String('⭐', i))
                                        </option>
                                    }
                                </select>

                                <small class="texto-calificacion mt-1">
                                    @if (elemento.CalificaionUsuario.HasValue)
                                    {
                                        for (int i = 0; i < elemento.CalificaionUsuario; i++)
                                        {
                                            <span>⭐</span>
                                        }
                                    }
                                    else
                                    {
                                        <span>No calificada</span>
                                    }
                                </small>
                            </div>
                        </td>
                        <td class="promedio">
                            <span title="Promedio">@Math.Round(elemento.PromedioCalificacion, 1)</span>
                            @for (int i = 0; i < Math.Round(elemento.PromedioCalificacion); i++)
                            {
                                <span>⭐</span>
                            }
                            <br />
                            <small>(@elemento.TotalCalificaciones calificaciones)</small>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<script>
        function jsDelete(id)
        {
                url = "@Url.Content("~/Users/NoFavorito")" + "/"+ id;

                $.post(url, function (data)
                {
                    if (data == "1")
                    {
                        document.location.href = "@Url.Content("~/Users/")"
                    } else {
                        alert("Ocurrio un error")
                            }
                })
        }
</script>

@section scripts{

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        $(document).ready(function () {
            $("#buscar").on("keyup", function () {
                var texto = $(this).val();
                if (texto === "") {
                    location.reload(); // recarga para volver a ver el Razor
                    return;
                }
            $.ajax({
                url: '@Url.Action("BuscarFav", "Users")',
                data: { termino: texto },
                type: "GET",
                success: function (data) {
                    // Obtener el <tbody> de la tabla
                    console.log(data);
                var tbody = $("#tablaCanciones tbody");

                // 2️⃣ Limpiar el contenido anterior (incluyendo lo generado por Razor)
                tbody.empty();

                // 3️⃣ Si hay resultados, agregarlos
                if (data.length > 0) {
                    $.each(data, function (i, cancion) {
                        var fila = "<tr>" +
                            "<td>" + cancion.Nombre_Cancion + "</td>" +
                            "<td>" + cancion.Artista + "</td>" +
                            "<td>" + cancion.Genero + "</td>" +
                            "<td><input onclick='jsDelete(" + cancion.ID + ")' type='button' value='Favorito' class='btn btn-primary' /></td>" +
                            "</tr>";
                        tbody.append(fila);
                    });
                } else {
                    // 4️⃣ Si no hay resultados, mostrar mensaje
                    tbody.append("<tr><td colspan='4'>No se encontraron resultados</td></tr>");
                }
            },
            error: function () {
                alert("Ocurrió un error al buscar canciones.");
            }
            });
        });
    });
    </script>

    <script>
        $(document).ready(function () {
            $('#generoFiltro').on('change', function () {
                var generoSeleccionado = $(this).val().toLowerCase();

                $('#tablaCanciones tbody tr').each(function () {
                    var genero = $(this).find('td:eq(3)').text().toLowerCase();

                    if (generoSeleccionado === "" || genero.includes(generoSeleccionado)) {
                        $(this).show();
                    } else {
                        $(this).hide();
                    }
                });
            });
        });
    </script>

    <script>
    $(document).on("change", ".calificacion", function () {
        var cancionId = $(this).data("id");
        var puntuacion = $(this).val();

        $.ajax({
            url: '@Url.Action("Calificar", "Users")',
            method: "POST",
            data: {
                cancionId: cancionId,
                puntuacion: puntuacion
            },
            success: function () {
                alert("¡Gracias por tu calificación!");
            },
            error: function () {
                alert("Ocurrió un error.");
            }
        });
    });
    </script>

    <script>
 $(document).ready(function () {
     $(".calificacion").on("change", function () {
         const cancionId = $(this).data("id");
         const puntuacion = $(this).val();
         const $calificacionTexto = $(this).siblings(".texto-calificacion");
         const $promedioCelda = $(this).closest("tr").find(".promedio");

         $.ajax({
             url: '@Url.Action("Calificar", "Users")',
             method: "POST",
             data: {
                 cancionId: cancionId,
                 puntuacion: puntuacion
             },
             success: function (response) {
                 // Actualizar calificación del usuario
                 let estrellasUsuario = "";
                 for (let i = 0; i < puntuacion; i++) {
                     estrellasUsuario += "⭐";
                 }
                 $calificacionTexto.html(estrellasUsuario || "No calificada");

                 // Actualizar promedio
                 const promedio = parseFloat(response.promedio).toFixed(1);
                 let estrellasProm = "";
                 for (let i = 0; i < Math.round(response.promedio); i++) {
                     estrellasProm += "⭐";
                 }

                 $promedioCelda.html(`<span title="Promedio">${promedio}</span> ${estrellasProm}`);
             },
             error: function () {
                 alert("Error al actualizar calificación.");
             }
         });
     });
 });
    </script>
    <!-- DataTables CSS -->
    <link rel="stylesheet" href="https://cdn.datatables.net/1.13.6/css/jquery.dataTables.min.css">

    <!-- jQuery -->
    <script src="https://code.jquery.com/jquery-3.7.0.min.js"></script>

    <!-- DataTables JS -->
    <script src="https://cdn.datatables.net/1.13.6/js/jquery.dataTables.min.js"></script>

    <script>
        $(document).ready(function () {
            $('#tablaCanciones').DataTable({
                paging: false,  // desactiva paginación si no la necesitas
                info: false,    // quita texto "Mostrando X de Y"
                searching: false // ya tienes tu propio buscador
            });
        });
    </script>
}
